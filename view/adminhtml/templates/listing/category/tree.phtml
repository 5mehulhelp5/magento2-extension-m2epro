<?php
/**
 * @author     M2E Pro Developers Team
 * @copyright  M2E LTD
 * @license    Commercial use is forbidden
 */

// @codingStandardsIgnoreFile

/** @var \Ess\M2ePro\Block\Adminhtml\Listing\Category\Tree $block */

$selectedCategories = $block->getSelectedCategories();
$highlightedCategories = $block->getHighlightedCategories();
$callback = $block->getCallback();
?>

<style>
    #modal_dialog_message [id^="ext-gen"] {
        vertical-align: middle;
    }
</style>

<div class="tree-actions" style="margin-bottom: 5px;">
    <a href="#" id="collapse-all"><?php
        echo __('Collapse All'); ?></a>
    <span class="separator">|</span>
    <a href="#" id="expand-all"><?php
        echo __('Expand All'); ?></a>
</div>
<div class="categories-side-col">
    <div class="tree-holder">
        <div id="tree-div-auto-action" style="width: 100%; overflow: auto;" class="admin__scope-old"></div>
    </div>
</div>

<script type="text/javascript">
    require(['jquery', 'M2ePro/Listing/Category/Tree'], function ($) {
        window.ListingCategoryTreeObj = new ListingCategoryTree();

        window.categories_selected_items = [];
        window.initTreeSelectedNodes = [];
        window.initTreeHighlightedNodes = [];

        window.ignoreTreeCallback = false;
        window.lastCallbackParams = [];

        <?php foreach ($selectedCategories as $category) { ?>
        categories_selected_items.push('<?php echo $category; ?>');
        initTreeSelectedNodes[initTreeSelectedNodes.length] = [];
        initTreeSelectedNodes[initTreeSelectedNodes.length-1][0] = '<?php echo $category; ?>';
        initTreeSelectedNodes[initTreeSelectedNodes.length-1][1] = null;
        <?php } ?>

        <?php foreach ($highlightedCategories as $category) { ?>
        initTreeHighlightedNodes[initTreeHighlightedNodes.length] = [];
        initTreeHighlightedNodes[initTreeHighlightedNodes.length-1][0] = '<?php echo $category; ?>';
        initTreeHighlightedNodes[initTreeHighlightedNodes.length-1][1] = null;
        <?php } ?>

        function init() {
            if ($('#tree-div-auto-action').length) {
                window.tree = $('#tree-div-auto-action').jstree({
                    'core': {
                        'themes': { 'responsive': false },
                        'data': <?php echo $block->getTreeJson(); ?>,
                    },
                    'plugins': ['checkbox'],
                    'checkbox': {
                        'three_state': false,
                        'whole_node': false,
                        'tie_selection': false
                    }
                });

                tree.on('ready.jstree', function () {
                    $('#expand-all').on('click', function () {
                        tree.jstree('open_all');
                        return false;
                    });

                    $('#collapse-all').on('click', function () {
                        tree.jstree('close_all');
                        return false;
                    });

                    for (var i = 0; i < initTreeSelectedNodes.length; i++) {
                        tree.jstree('select_node', initTreeSelectedNodes[i][0]);
                    }

                    for (var j = 0; j < initTreeHighlightedNodes.length; j++) {
                        tree.jstree('highlight_node', initTreeHighlightedNodes[j][0]);
                    }
                });

                tree.on('select_node.jstree', function (e, data) {
                    <?php if (!empty($callback)) : ?>
                    !ignoreTreeCallback && (<?php echo $callback ?>)([data.node.id]);
                    <?php endif; ?>

                    categories_selected_items.forEach(function (nodeId) {
                        tree.jstree('uncheck_node', nodeId);
                    });

                    categories_selected_items = [data.node.id];
                });

                tree.on('check_node.jstree', function (e, data) {
                    if (!categories_selected_items.includes(data.node.id)) {
                        categories_selected_items.push(data.node.id);
                    }

                    ListingCategoryTreeObj.tree_categoryAdd(data.node.id);

                    <?php if (!empty($callback)) : ?>
                    !ignoreTreeCallback && (<?php echo $callback ?>)(categories_selected_items);
                    <?php endif; ?>
                });

                tree.on('uncheck_node.jstree', function (e, data) {
                    categories_selected_items = categories_selected_items.filter(function(id) {
                        return id !== data.node.id;
                    });

                    ListingCategoryTreeObj.tree_categoryRemove(data.node.id);

                    <?php if (!empty($callback)) : ?>
                    !ignoreTreeCallback && (<?php echo $callback ?>)(categories_selected_items);
                    <?php endif; ?>
                });
            }
        }

        $(document).ready(function() {
            init();
        });
    });
</script>
